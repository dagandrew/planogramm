Sub AssembleData()
    Dim wsAssemble As Worksheet, wsPolki As Worksheet, wsSource As Worksheet
    Dim sheetNames As Range, cell As Range
    Dim lastRow As Long, sourceLastRow As Long, startRow As Long, batchEndRow As Long
    Dim arrData As Variant, arrFiltered() As Variant
    Dim i As Long, j As Long, filterCount As Long
    
    ' Check if 'Assemble' sheet exists
    On Error Resume Next
    Set wsAssemble = ThisWorkbook.Sheets("Assemble")
    On Error GoTo 0
    If wsAssemble Is Nothing Then
        MsgBox "Sheet 'Assemble' isnt found!", vbCritical
        Exit Sub
    End If
    
    ' Prepare '?????' sheet
    Application.DisplayAlerts = False
    On Error Resume Next
    ThisWorkbook.Sheets("?????").Delete
    On Error GoTo 0
    Set wsPolki = ThisWorkbook.Sheets.Add(After:=ThisWorkbook.Sheets(ThisWorkbook.Sheets.Count))
    wsPolki.Name = "Ïîëêè"
    Application.DisplayAlerts = True
    
    ' Set headers
    wsPolki.Range("A1:G1").Value = Array("0", "Êîä íîìåíêëàòóðû", "Íàèìåíîâàíèå", "MIN", "MAX", "Áðåíä", "Ïîçèöèÿ")
    
    ' Get list of sheets to process
    Set sheetNames = wsAssemble.Range("B2", wsAssemble.Cells(wsAssemble.Rows.Count, "B").End(xlUp))
    
    For Each cell In sheetNames
        ' Validate sheet exists
        On Error Resume Next
        Set wsSource = ThisWorkbook.Sheets(cell.Value)
        On Error GoTo 0
        If wsSource Is Nothing Then
            MsgBox "Sheet '" & cell.Value & "' not found!", vbExclamation
            GoTo NextSheet
        End If
        
        ' Find last row with data in columns E, F, or G
        sourceLastRow = GetLastRow(wsSource)
        If sourceLastRow < 1 Then GoTo NextSheet  ' Skip if no data
        
        ' Load data into array (E, F, G columns)
        arrData = wsSource.Range("E1:G" & sourceLastRow).Value
        
        ' Filter out completely empty rows
        ReDim arrFiltered(1 To UBound(arrData, 1), 1 To 3)
        filterCount = 0
        For i = 1 To UBound(arrData, 1)
            If Not IsEmptyRow(arrData, i) Then
                filterCount = filterCount + 1
                For j = 1 To 3
                    arrFiltered(filterCount, j) = arrData(i, j)
                Next j
            End If
        Next i
        
        ' Copy filtered data to ????? sheet
        If filterCount > 0 Then
            With wsPolki
                lastRow = .Cells(.Rows.Count, "B").End(xlUp).Row
                startRow = IIf(lastRow = 1 And Len(.Range("B1")) > 0, 2, lastRow + 1)
                
                ' Paste data into B, C, F
                .Range("B" & startRow).Resize(filterCount, 1).Value = Application.Index(arrFiltered, 0, 1)  ' E -> B
                .Range("C" & startRow).Resize(filterCount, 1).Value = Application.Index(arrFiltered, 0, 2)  ' F -> C
                .Range("F" & startRow).Resize(filterCount, 1).Value = Application.Index(arrFiltered, 0, 3)  ' G -> F
                
                ' Add bottom border
                batchEndRow = startRow + filterCount - 1
                If batchEndRow >= startRow Then
                    With .Range("A" & batchEndRow & ":G" & batchEndRow).Borders(xlEdgeBottom)
                        .LineStyle = xlContinuous
                        .Weight = xlThin
                        .ColorIndex = xlAutomatic
                    End With
                End If
            End With
        End If

NextSheet:
    Next cell
    
    ' Final cleanup
    wsPolki.Columns("A:G").AutoFit
    MsgBox "Done!", vbInformation
End Sub

Function GetLastRow(ws As Worksheet) As Long
    ' Find last row with data in columns E, F, or G
    GetLastRow = Application.Max( _
        ws.Cells(ws.Rows.Count, "E").End(xlUp).Row, _
        ws.Cells(ws.Rows.Count, "F").End(xlUp).Row, _
        ws.Cells(ws.Rows.Count, "G").End(xlUp).Row)
End Function

Function IsEmptyRow(arr As Variant, rowIndex As Long) As Boolean
    ' Check if all three columns in the row are empty
    IsEmptyRow = (Trim(arr(rowIndex, 1) & arr(rowIndex, 2) & arr(rowIndex, 3)) = "")
End Function

